buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
 
repositories {
	mavenCentral()
	mavenLocal()
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir "src/main/resources"
            srcDir "src/main/webapp"
        }
    }
    test {
        java {
            srcDir "src/test/java"
            srcDir "src/test/resources"
        }
    }
}
repositories {
    mavenCentral()
}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-security') 
	compile("org.springframework.boot:spring-boot-starter-data-mongodb")   
	 compile('org.hibernate:hibernate-validator:5.4.1.Final')
	compile("io.springfox:springfox-swagger2:2.0.2")
    compile("io.springfox:springfox-swagger-ui:2.0.2")
    compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.apache.commons:commons-lang3:3.5")
	compile("commons-io:commons-io:2.5")
	compile("org.apache.poi:poi:3.15")
	compile("org.freemarker:freemarker:2.3.23")
	compile("org.apache.commons:commons-csv:1.3") 
	
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.pine.Server'
}

bootRun {
    systemProperties System.properties
}